name: .NET Release

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        working-directory: TreasureMap
        run: dotnet restore

      - name: Build
        working-directory: TreasureMap
        run: dotnet build --no-restore

      - name: Test
        working-directory: TreasureMap/TreasureMap.Tests
        run: dotnet test --no-build --verbosity normal --logger "trx"

      - name: Publish Executable for Windows
        working-directory: TreasureMap
        run: |
          dotnet publish --configuration Release --output ./publish --runtime win-x64 --self-contained true
      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-executable
          path: TreasureMap/publish/

  create_tag:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate Version Tag
        id: version
        run: |
          VERSION="v1.0.$(date +%s)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"
          echo "Generated version: $VERSION"
      - name: Create and Push Git Tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag $VERSION
          git push origin $VERSION
        env:
          VERSION: ${{ steps.version.outputs.version }}

  release:
    needs: create_tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: published-executable
          path: ./artifacts

      - name: Create Directory for Assets
        run: mkdir -p ./release-assets

      - name: Move Artifacts to Release Folder
        run: mv ./artifacts/* ./release-assets/

      - name: List Release Folder Contents
        run: ls -al ./release-assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_tag.outputs.version }}
          name: Release ${{ needs.create_tag.outputs.version }}
          body: "Automatic release after merging into main."
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./release-assets/*
